

## one-way ANOVA with Fisher LSD posthoc tests

ulimit -s 16384
export R_MAX_VSIZE=100000000000
R --max-ppsize 500000
rm(list=ls())

setwd("/Users/danehninger/Documents/Aging_projects/Altersgruppen_GMC/Results_GMC/DZNE_C57BL_6J_raw_data/AllRawFiles_forMerge")
library(effsize) # for calculation of cohen's d effect sizes
library(Rmisc) # for calculation of confidence intervals
library(agricolae) # for Fisher LSD posthoc test, LSD.test()

df <- read.csv2('MergePhenotypes_v4_parametric_for_ANOVAs.csv')
df_stats <- data.frame()
df_processed <- data.frame()

colIndex <- 9
rowIndex <- 0
cn <- colnames(df)

for(i in 10:188) {
      # loop through columns 10-301, i.e. all columns with phenotype data
      colIndex <- colIndex + 1
      rowIndex <- rowIndex + 1
      colN <- cn[colIndex]
      print(rowIndex)
      print(colN)
      df[, colN] <- as.numeric(as.character(df[, colN]))
      cc <- complete.cases(df[, colN])
      df_temp <- df[cc, ]
      age_3mo <- df_temp[df_temp$age == '3_mo', ]
      mean_age_3mo <- mean(age_3mo[, colN])
      ci_age_3mo <- CI(age_3mo[, colN], ci=0.95)
      sd_age_3mo <- sd(age_3mo[, colN])
      n_age_3mo <- length(age_3mo[, colN])
      age_5mo <- df_temp[df_temp$age == '5_mo', ]
      mean_age_5mo <- mean(age_5mo[, colN])
      ci_age_5mo <- CI(age_5mo[, colN], ci=0.95)
      sd_age_5mo <- sd(age_5mo[, colN])
      n_age_5mo <- length(age_5mo[, colN])
      age_8mo <- df_temp[df_temp$age == '8_mo', ]
      mean_age_8mo <- mean(age_8mo[, colN])
      ci_age_8mo <- CI(age_8mo[, colN], ci=0.95)
      sd_age_8mo <- sd(age_8mo[, colN])
      n_age_8mo <- length(age_8mo[, colN])
      age_14mo <- df_temp[df_temp$age == '14_mo', ]
      mean_age_14mo <- mean(age_14mo[, colN])
      ci_age_14mo <- CI(age_14mo[, colN], ci=0.95)
      sd_age_14mo <- sd(age_14mo[, colN])
      n_age_14mo <- length(age_14mo[, colN])
      age_20mo <- df_temp[df_temp$age == '20_mo', ]
      mean_age_20mo <- mean(age_20mo[, colN])
      ci_age_20mo <- CI(age_20mo[, colN], ci=0.95)
      sd_age_20mo <- sd(age_20mo[, colN])
      n_age_20mo <- length(age_20mo[, colN])
      age_26mo <- df_temp[df_temp$age == '26_mo', ]
      mean_age_26mo <- mean(age_26mo[, colN])
      ci_age_26mo <- CI(age_26mo[, colN], ci=0.95)
      sd_age_26mo <- sd(age_26mo[, colN])
      n_age_26mo <- length(age_26mo[, colN])

      model <- lm(df_temp[, colN] ~ age, data = df_temp)
      options(contrasts = c('contr.sum', 'contr.poly'))
      aov_colN <- aov(df_temp[, colN] ~ age, data = df_temp)
      p_age <- summary(aov_colN)[[1]][[1,"Pr(>F)"]]

      df_stats[rowIndex, 1] <- colN
      df_stats[rowIndex, 2] <- mean_age_3mo
      df_stats[rowIndex, 3] <- ci_age_3mo[1]
      df_stats[rowIndex, 4] <- ci_age_3mo[2]
      df_stats[rowIndex, 5] <- ci_age_3mo[3]
      df_stats[rowIndex, 6] <- sd_age_3mo
      df_stats[rowIndex, 7] <- n_age_3mo

      df_stats[rowIndex, 8] <- mean_age_5mo
      df_stats[rowIndex, 9] <- ci_age_5mo[1]
      df_stats[rowIndex, 10] <- ci_age_5mo[2]
      df_stats[rowIndex, 11] <- ci_age_5mo[3]
      df_stats[rowIndex, 12] <- sd_age_5mo
      df_stats[rowIndex, 13] <- n_age_5mo

      df_stats[rowIndex, 14] <- mean_age_8mo
      df_stats[rowIndex, 15] <- ci_age_8mo[1]
      df_stats[rowIndex, 16] <- ci_age_8mo[2]
      df_stats[rowIndex, 17] <- ci_age_8mo[3]
      df_stats[rowIndex, 18] <- sd_age_8mo
      df_stats[rowIndex, 19] <- n_age_8mo

      df_stats[rowIndex, 20] <- mean_age_14mo
      df_stats[rowIndex, 21] <- ci_age_14mo[1]
      df_stats[rowIndex, 22] <- ci_age_14mo[2]
      df_stats[rowIndex, 23] <- ci_age_14mo[3]
      df_stats[rowIndex, 24] <- sd_age_14mo
      df_stats[rowIndex, 25] <- n_age_14mo

      df_stats[rowIndex, 26] <- mean_age_20mo
      df_stats[rowIndex, 27] <- ci_age_20mo[1]
      df_stats[rowIndex, 28] <- ci_age_20mo[2]
      df_stats[rowIndex, 29] <- ci_age_20mo[3]
      df_stats[rowIndex, 30] <- sd_age_20mo
      df_stats[rowIndex, 31] <- n_age_20mo

      df_stats[rowIndex, 32] <- mean_age_26mo
      df_stats[rowIndex, 33] <- ci_age_26mo[1]
      df_stats[rowIndex, 34] <- ci_age_26mo[2]
      df_stats[rowIndex, 35] <- ci_age_26mo[3]
      df_stats[rowIndex, 36] <- sd_age_26mo
      df_stats[rowIndex, 37] <- n_age_26mo

      df_stats[rowIndex, 38] <- p_age

      posthoc_colN <- LSD.test(aov_colN, 'age', group = FALSE)
      df_stats[rowIndex, 39] <- posthoc_colN$comparison['3_mo - 5_mo', 'pvalue']
      df_stats[rowIndex, 40] <- posthoc_colN$comparison['3_mo - 8_mo', 'pvalue']
      df_stats[rowIndex, 41] <- posthoc_colN$comparison['14_mo - 3_mo', 'pvalue']
      df_stats[rowIndex, 42] <- posthoc_colN$comparison['20_mo - 3_mo', 'pvalue']
      df_stats[rowIndex, 43] <- posthoc_colN$comparison['26_mo - 3_mo', 'pvalue']
      df_stats[rowIndex, 44] <- posthoc_colN$comparison['5_mo - 8_mo', 'pvalue']
      df_stats[rowIndex, 45] <- posthoc_colN$comparison['14_mo - 5_mo', 'pvalue']
      df_stats[rowIndex, 46] <- posthoc_colN$comparison['20_mo - 5_mo', 'pvalue']
      df_stats[rowIndex, 47] <- posthoc_colN$comparison['26_mo - 5_mo', 'pvalue']
      df_stats[rowIndex, 48] <- posthoc_colN$comparison['14_mo - 8_mo', 'pvalue']
      df_stats[rowIndex, 49] <- posthoc_colN$comparison['20_mo - 8_mo', 'pvalue']
      df_stats[rowIndex, 50] <- posthoc_colN$comparison['26_mo - 8_mo', 'pvalue']
      df_stats[rowIndex, 51] <- posthoc_colN$comparison['14_mo - 20_mo', 'pvalue']
      df_stats[rowIndex, 52] <- posthoc_colN$comparison['14_mo - 26_mo', 'pvalue']
      df_stats[rowIndex, 53] <- posthoc_colN$comparison['20_mo - 26_mo', 'pvalue']


      df_temp_3vs5mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '5_mo', ]
      df_temp_3vs5mo$age <- as.character(df_temp_3vs5mo$age)
      df_temp_3vs5mo$age <- as.factor(df_temp_3vs5mo$age)
      df_temp_3vs5mo$age <- relevel(df_temp_3vs5mo$age, '5_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs5mo <- cohen.d(d = df_temp_3vs5mo[, colN], f = df_temp_3vs5mo$age)

      df_temp_3vs8mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '8_mo', ]
      df_temp_3vs8mo$age <- as.character(df_temp_3vs8mo$age)
      df_temp_3vs8mo$age <- as.factor(df_temp_3vs8mo$age)
      df_temp_3vs8mo$age <- relevel(df_temp_3vs8mo$age, '8_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs8mo <- cohen.d(d = df_temp_3vs8mo[, colN], f = df_temp_3vs8mo$age)

      df_temp_3vs14mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '14_mo', ]
      df_temp_3vs14mo$age <- as.character(df_temp_3vs14mo$age)
      df_temp_3vs14mo$age <- as.factor(df_temp_3vs14mo$age)
      df_temp_3vs14mo$age <- relevel(df_temp_3vs14mo$age, '14_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs14mo <- cohen.d(d = df_temp_3vs14mo[, colN], f = df_temp_3vs14mo$age)

      df_temp_3vs20mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '20_mo', ]
      df_temp_3vs20mo$age <- as.character(df_temp_3vs20mo$age)
      df_temp_3vs20mo$age <- as.factor(df_temp_3vs20mo$age)
      df_temp_3vs20mo$age <- relevel(df_temp_3vs20mo$age, '20_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs20mo <- cohen.d(d = df_temp_3vs20mo[, colN], f = df_temp_3vs20mo$age)

      df_temp_3vs26mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '26_mo', ]
      df_temp_3vs26mo$age <- as.character(df_temp_3vs26mo$age)
      df_temp_3vs26mo$age <- as.factor(df_temp_3vs26mo$age)
      df_temp_3vs26mo$age <- relevel(df_temp_3vs26mo$age, '26_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs26mo <- cohen.d(d = df_temp_3vs26mo[, colN], f = df_temp_3vs26mo$age)

      df_stats[rowIndex, 54] <- cohen.d_3vs5mo$estimate
      df_stats[rowIndex, 55] <- cohen.d_3vs8mo$estimate
      df_stats[rowIndex, 56] <- cohen.d_3vs14mo$estimate
      df_stats[rowIndex, 57] <- cohen.d_3vs20mo$estimate
      df_stats[rowIndex, 58] <- cohen.d_3vs26mo$estimate
}

colnames(df_stats) <- c('phenotype', 'mean_3mo', 'ci_3mo_upper', 'ci_3mo_mean', 'ci_3mo_lower', 'sd_3mo', 'n_3mo', 'mean_5mo', 'ci_5mo_upper', 'ci_5mo_mean', 'ci_5mo_lower', 'sd_5mo', 'n_5mo', 'mean_8mo', 'ci_8mo_upper', 'ci_8mo_mean', 'ci_8mo_lower', 'sd_8mo', 'n_8mo', 'mean_14mo', 'ci_14mo_upper', 'ci_14mo_mean', 'ci_14mo_lower', 'sd_14mo', 'n_14mo', 'mean_20mo', 'ci_20mo_upper', 'ci_20mo_mean', 'ci_20mo_lower', 'sd_20mo', 'n_20mo', 'mean_26mo', 'ci_26mo_upper', 'ci_26mo_mean', 'ci_26mo_lower', 'sd_26mo', 'n_26mo', 'anova_age_p', 'posthoc_3_vs_5mo_p_adj', 'posthoc_3_vs_8mo_p_adj', 'posthoc_3_vs_14mo_p_adj', 'posthoc_3_vs_20mo_p_adj', 'posthoc_3_vs_26mo_p_adj', 'posthoc_5_vs_8mo_p_adj', 'posthoc_5_vs_14mo_p_adj', 'posthoc_5_vs_20mo_p_adj', 'posthoc_5_vs_26mo_p_adj', 'posthoc_8_vs_14mo_p_adj', 'posthoc_8_vs_20mo_p_adj', 'posthoc_8_vs_26mo_p_adj', 'posthoc_14_vs_20mo_p_adj', 'posthoc_14_vs_26mo_p_adj', 'posthoc_20_vs_26mo_p_adj', 'cohen_d_3_vs_5mo', 'cohen_d_3_vs_8mo', 'cohen_d_3_vs_14mo', 'cohen_d_3_vs_20mo', 'cohen_d_3_vs_26mo')

write.csv(df_stats, file = 'Statistics_1-wayANOVAs_FisherLSD_ageGroups_all_relevel cohend.csv')



_____________________________________

## for non-parametric measures: Kruskal Wallis Test followed by Dunn Test where appropriate


ulimit -s 16384
export R_MAX_VSIZE=100000000000
R --max-ppsize 500000
rm(list=ls())

setwd("/Users/danehninger/Documents/Aging_projects/Altersgruppen_GMC/Results_GMC/DZNE_C57BL_6J_raw_data/AllRawFiles_forMerge")
library(effsize)
library(Rmisc)
library(FSA) #for Dunn test, posthoc test for Kruskal Wallis Test

df <- read.csv2('MergePhenotypes_v4_non-parametric_for_KruskalWallis.csv')
df_stats <- data.frame()
#df[, 'average_bw'] <- as.numeric(df[, 'average_bw'])
df_processed <- data.frame()

colIndex <- 9
rowIndex <- 0
cn <- colnames(df)

for(i in 10:16) {
      # loop through columns 10-16, i.e. all columns with phenotype data
      colIndex <- colIndex + 1
      rowIndex <- rowIndex + 1
      colN <- cn[colIndex]
      print(rowIndex)
      print(colN)
      df[, colN] <- as.numeric(as.character(df[, colN]))
      cc <- complete.cases(df[, colN])
      df_temp <- df[cc, ]
      age_3mo <- df_temp[df_temp$age == '3_mo', ]
      mean_age_3mo <- mean(age_3mo[, colN])
      ci_age_3mo <- CI(age_3mo[, colN], ci=0.95)
      sd_age_3mo <- sd(age_3mo[, colN])
      n_age_3mo <- length(age_3mo[, colN])
      age_5mo <- df_temp[df_temp$age == '5_mo', ]
      mean_age_5mo <- mean(age_5mo[, colN])
      ci_age_5mo <- CI(age_5mo[, colN], ci=0.95)
      sd_age_5mo <- sd(age_5mo[, colN])
      n_age_5mo <- length(age_5mo[, colN])
      age_8mo <- df_temp[df_temp$age == '8_mo', ]
      mean_age_8mo <- mean(age_8mo[, colN])
      ci_age_8mo <- CI(age_8mo[, colN], ci=0.95)
      sd_age_8mo <- sd(age_8mo[, colN])
      n_age_8mo <- length(age_8mo[, colN])
      age_14mo <- df_temp[df_temp$age == '14_mo', ]
      mean_age_14mo <- mean(age_14mo[, colN])
      ci_age_14mo <- CI(age_14mo[, colN], ci=0.95)
      sd_age_14mo <- sd(age_14mo[, colN])
      n_age_14mo <- length(age_14mo[, colN])
      age_20mo <- df_temp[df_temp$age == '20_mo', ]
      mean_age_20mo <- mean(age_20mo[, colN])
      ci_age_20mo <- CI(age_20mo[, colN], ci=0.95)
      sd_age_20mo <- sd(age_20mo[, colN])
      n_age_20mo <- length(age_20mo[, colN])
      age_26mo <- df_temp[df_temp$age == '26_mo', ]
      mean_age_26mo <- mean(age_26mo[, colN])
      ci_age_26mo <- CI(age_26mo[, colN], ci=0.95)
      sd_age_26mo <- sd(age_26mo[, colN])
      n_age_26mo <- length(age_26mo[, colN])

      krusk <- kruskal.test(df_temp[, colN] ~ age,
                   data = df_temp)
      p_age <- krusk$p.value

      df_stats[rowIndex, 1] <- colN
      df_stats[rowIndex, 2] <- mean_age_3mo
      df_stats[rowIndex, 3] <- ci_age_3mo[1]
      df_stats[rowIndex, 4] <- ci_age_3mo[2]
      df_stats[rowIndex, 5] <- ci_age_3mo[3]
      df_stats[rowIndex, 6] <- sd_age_3mo
      df_stats[rowIndex, 7] <- n_age_3mo

      df_stats[rowIndex, 8] <- mean_age_5mo
      df_stats[rowIndex, 9] <- ci_age_5mo[1]
      df_stats[rowIndex, 10] <- ci_age_5mo[2]
      df_stats[rowIndex, 11] <- ci_age_5mo[3]
      df_stats[rowIndex, 12] <- sd_age_5mo
      df_stats[rowIndex, 13] <- n_age_5mo

      df_stats[rowIndex, 14] <- mean_age_8mo
      df_stats[rowIndex, 15] <- ci_age_8mo[1]
      df_stats[rowIndex, 16] <- ci_age_8mo[2]
      df_stats[rowIndex, 17] <- ci_age_8mo[3]
      df_stats[rowIndex, 18] <- sd_age_8mo
      df_stats[rowIndex, 19] <- n_age_8mo

      df_stats[rowIndex, 20] <- mean_age_14mo
      df_stats[rowIndex, 21] <- ci_age_14mo[1]
      df_stats[rowIndex, 22] <- ci_age_14mo[2]
      df_stats[rowIndex, 23] <- ci_age_14mo[3]
      df_stats[rowIndex, 24] <- sd_age_14mo
      df_stats[rowIndex, 25] <- n_age_14mo

      df_stats[rowIndex, 26] <- mean_age_20mo
      df_stats[rowIndex, 27] <- ci_age_20mo[1]
      df_stats[rowIndex, 28] <- ci_age_20mo[2]
      df_stats[rowIndex, 29] <- ci_age_20mo[3]
      df_stats[rowIndex, 30] <- sd_age_20mo
      df_stats[rowIndex, 31] <- n_age_20mo

      df_stats[rowIndex, 32] <- mean_age_26mo
      df_stats[rowIndex, 33] <- ci_age_26mo[1]
      df_stats[rowIndex, 34] <- ci_age_26mo[2]
      df_stats[rowIndex, 35] <- ci_age_26mo[3]
      df_stats[rowIndex, 36] <- sd_age_26mo
      df_stats[rowIndex, 37] <- n_age_26mo

      df_stats[rowIndex, 38] <- p_age


      PT = dunnTest(df_temp[, colN] ~ age,
                    data = df_temp,
                    method = "bh")

      df_stats[rowIndex, 39] <- PT$res[PT$res$Comparison == '3_mo - 5_mo', 'P.adj']
      df_stats[rowIndex, 40] <- PT$res[PT$res$Comparison == '3_mo - 8_mo', 'P.adj']
      df_stats[rowIndex, 41] <- PT$res[PT$res$Comparison == '14_mo - 3_mo', 'P.adj']
      df_stats[rowIndex, 42] <- PT$res[PT$res$Comparison == '20_mo - 3_mo', 'P.adj']
      df_stats[rowIndex, 43] <- PT$res[PT$res$Comparison == '26_mo - 3_mo', 'P.adj']
      df_stats[rowIndex, 44] <- PT$res[PT$res$Comparison == '5_mo - 8_mo', 'P.adj']
      df_stats[rowIndex, 45] <- PT$res[PT$res$Comparison == '14_mo - 5_mo', 'P.adj']
      df_stats[rowIndex, 46] <- PT$res[PT$res$Comparison == '20_mo - 5_mo', 'P.adj']
      df_stats[rowIndex, 47] <- PT$res[PT$res$Comparison == '26_mo - 5_mo', 'P.adj']
      df_stats[rowIndex, 48] <- PT$res[PT$res$Comparison == '14_mo - 8_mo', 'P.adj']
      df_stats[rowIndex, 49] <- PT$res[PT$res$Comparison == '20_mo - 8_mo', 'P.adj']
      df_stats[rowIndex, 50] <- PT$res[PT$res$Comparison == '26_mo - 8_mo', 'P.adj']
      df_stats[rowIndex, 51] <- PT$res[PT$res$Comparison == '14_mo - 20_mo', 'P.adj']
      df_stats[rowIndex, 52] <- PT$res[PT$res$Comparison == '14_mo - 26_mo', 'P.adj']
      df_stats[rowIndex, 53] <- PT$res[PT$res$Comparison == '20_mo - 26_mo', 'P.adj']


      df_temp_3vs5mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '5_mo', ]
      df_temp_3vs5mo$age <- as.character(df_temp_3vs5mo$age)
      df_temp_3vs5mo$age <- as.factor(df_temp_3vs5mo$age)
      df_temp_3vs5mo$age <- relevel(df_temp_3vs5mo$age, '5_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs5mo <- cohen.d(d = df_temp_3vs5mo[, colN], f = df_temp_3vs5mo$age)

      df_temp_3vs8mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '8_mo', ]
      df_temp_3vs8mo$age <- as.character(df_temp_3vs8mo$age)
      df_temp_3vs8mo$age <- as.factor(df_temp_3vs8mo$age)
      df_temp_3vs8mo$age <- relevel(df_temp_3vs8mo$age, '8_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs8mo <- cohen.d(d = df_temp_3vs8mo[, colN], f = df_temp_3vs8mo$age)

      df_temp_3vs14mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '14_mo', ]
      df_temp_3vs14mo$age <- as.character(df_temp_3vs14mo$age)
      df_temp_3vs14mo$age <- as.factor(df_temp_3vs14mo$age)
      df_temp_3vs14mo$age <- relevel(df_temp_3vs14mo$age, '14_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs14mo <- cohen.d(d = df_temp_3vs14mo[, colN], f = df_temp_3vs14mo$age)

      df_temp_3vs20mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '20_mo', ]
      df_temp_3vs20mo$age <- as.character(df_temp_3vs20mo$age)
      df_temp_3vs20mo$age <- as.factor(df_temp_3vs20mo$age)
      df_temp_3vs20mo$age <- relevel(df_temp_3vs20mo$age, '20_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs20mo <- cohen.d(d = df_temp_3vs20mo[, colN], f = df_temp_3vs20mo$age)

      df_temp_3vs26mo <- df_temp[df_temp$age == '3_mo' | df_temp$age == '26_mo', ]
      df_temp_3vs26mo$age <- as.character(df_temp_3vs26mo$age)
      df_temp_3vs26mo$age <- as.factor(df_temp_3vs26mo$age)
      df_temp_3vs26mo$age <- relevel(df_temp_3vs26mo$age, '26_mo')        ##to make sure that comparisons are against 3_mo as reference
      cohen.d_3vs26mo <- cohen.d(d = df_temp_3vs26mo[, colN], f = df_temp_3vs26mo$age)

      df_stats[rowIndex, 54] <- cohen.d_3vs5mo$estimate
      df_stats[rowIndex, 55] <- cohen.d_3vs8mo$estimate
      df_stats[rowIndex, 56] <- cohen.d_3vs14mo$estimate
      df_stats[rowIndex, 57] <- cohen.d_3vs20mo$estimate
      df_stats[rowIndex, 58] <- cohen.d_3vs26mo$estimate
}

colnames(df_stats) <- c('phenotype', 'mean_3mo', 'ci_3mo_upper', 'ci_3mo_mean', 'ci_3mo_lower', 'sd_3mo', 'n_3mo', 'mean_5mo', 'ci_5mo_upper', 'ci_5mo_mean', 'ci_5mo_lower', 'sd_5mo', 'n_5mo', 'mean_8mo', 'ci_8mo_upper', 'ci_8mo_mean', 'ci_8mo_lower', 'sd_8mo', 'n_8mo', 'mean_14mo', 'ci_14mo_upper', 'ci_14mo_mean', 'ci_14mo_lower', 'sd_14mo', 'n_14mo', 'mean_20mo', 'ci_20mo_upper', 'ci_20mo_mean', 'ci_20mo_lower', 'sd_20mo', 'n_20mo', 'mean_26mo', 'ci_26mo_upper', 'ci_26mo_mean', 'ci_26mo_lower', 'sd_26mo', 'n_26mo', 'kruskal-wallis_age_p', 'posthoc_3_vs_5mo_p_adj', 'posthoc_3_vs_8mo_p_adj', 'posthoc_3_vs_14mo_p_adj', 'posthoc_3_vs_20mo_p_adj', 'posthoc_3_vs_26mo_p_adj', 'posthoc_5_vs_8mo_p_adj', 'posthoc_5_vs_14mo_p_adj', 'posthoc_5_vs_20mo_p_adj', 'posthoc_5_vs_26mo_p_adj', 'posthoc_8_vs_14mo_p_adj', 'posthoc_8_vs_20mo_p_adj', 'posthoc_8_vs_26mo_p_adj', 'posthoc_14_vs_20mo_p_adj', 'posthoc_14_vs_26mo_p_adj', 'posthoc_20_vs_26mo_p_adj', 'cohen_d_3_vs_5mo', 'cohen_d_3_vs_8mo', 'cohen_d_3_vs_14mo', 'cohen_d_3_vs_20mo', 'cohen_d_3_vs_26mo')

write.csv(df_stats, file = 'Statistics_Kruskal-Wallis-Test_ageGroups_all_relevel cohend.csv')



__________________________________

## Fisher's exact test for histopathology data (binomial data; outcomes: pathology present/absent)

ulimit -s 16384
export R_MAX_VSIZE=100000000000
R --max-ppsize 500000
rm(list=ls())

setwd("/Users/danehninger/Documents/Aging_projects/Altersgruppen_GMC/Results_GMC/DZNE_C57BL_6J_raw_data/AllRawFiles_forMerge/GMC histopatho for Fisher exact test/csv files")

library(rcompanion)

files <- dir()
df_stats <- data.frame()
rowindex <- 0

for(file in files) {
      rowindex <- rowindex + 1
      df <- read.csv2(file, row.names = 1)
      fisher_results <- fisher.test(df)
      p <- fisher_results$p.value
      m <- as.matrix(df)
      PT = pairwiseNominalIndependence(m,
                                       fisher = TRUE,
                                       gtest  = FALSE,
                                       chisq  = FALSE,
                                       digits = 3)
      df_stats[rowindex, 1] <- colnames(df)[2]      #name of parameter
      df_stats[rowindex, 2] <- df[1, 1]           #value 3 mo group, no pathology
      df_stats[rowindex, 3] <- df[1, 2]           #value 3 mo group, pathology
      df_stats[rowindex, 4] <- df[2, 1]           #value 5 mo group, no pathology
      df_stats[rowindex, 5] <- df[2, 2]           #value 5 mo group, pathology
      df_stats[rowindex, 6] <- df[3, 1]           #value 8 mo group, no pathology
      df_stats[rowindex, 7] <- df[3, 2]           #value 8 mo group, pathology
      df_stats[rowindex, 8] <- df[4, 1]           #value 14 mo group, no pathology
      df_stats[rowindex, 9] <- df[4, 2]           #value 14 mo group, pathology
      df_stats[rowindex, 10] <- df[5, 1]           #value 20 mo group, no pathology
      df_stats[rowindex, 11] <- df[5, 2]           #value 20 mo group, pathology
      df_stats[rowindex, 12] <- df[6, 1]           #value 26 mo group, no pathology
      df_stats[rowindex, 13] <- df[6, 2]           #value 26 mo group, pathology
      df_stats[rowindex, 14] <- p                    #p value Fisher's exact test over all groups
      df_stats[rowindex, 15] <- PT$p.Fisher[1]       # unadjusted p value posthoc Fisher's exact test, 3 vs 5 mo
      df_stats[rowindex, 16] <- PT$p.Fisher[2]       # unadjusted p value posthoc Fisher's exact test, 3 vs 8 mo
      df_stats[rowindex, 17] <- PT$p.Fisher[3]       # unadjusted p value posthoc Fisher's exact test, 3 vs 14 mo
      df_stats[rowindex, 18] <- PT$p.Fisher[4]       # unadjusted p value posthoc Fisher's exact test, 3 vs 20 mo
      df_stats[rowindex, 19] <- PT$p.Fisher[5]       # unadjusted p value posthoc Fisher's exact test, 3 vs 26 mo
      df_stats[rowindex, 20] <- PT$p.Fisher[6]       # unadjusted p value posthoc Fisher's exact test, 5 vs 8 mo
      df_stats[rowindex, 21] <- PT$p.Fisher[7]       # unadjusted p value posthoc Fisher's exact test, 5 vs 14 mo
      df_stats[rowindex, 22] <- PT$p.Fisher[8]       # unadjusted p value posthoc Fisher's exact test, 5 vs 20 mo
      df_stats[rowindex, 23] <- PT$p.Fisher[9]       # unadjusted p value posthoc Fisher's exact test, 5 vs 26 mo
      df_stats[rowindex, 24] <- PT$p.Fisher[10]       # unadjusted p value posthoc Fisher's exact test, 8 vs 14 mo
      df_stats[rowindex, 25] <- PT$p.Fisher[11]       # unadjusted p value posthoc Fisher's exact test, 8 vs 20 mo
      df_stats[rowindex, 26] <- PT$p.Fisher[12]       # unadjusted p value posthoc Fisher's exact test, 8 vs 26 mo
      df_stats[rowindex, 27] <- PT$p.Fisher[13]       # unadjusted p value posthoc Fisher's exact test, 14 vs 20 mo
      df_stats[rowindex, 28] <- PT$p.Fisher[14]       # unadjusted p value posthoc Fisher's exact test, 14 vs 26 mo
      df_stats[rowindex, 29] <- PT$p.Fisher[15]       # unadjusted p value posthoc Fisher's exact test, 20 vs 26 mo
      df_stats[rowindex, 30] <- PT$p.adj.Fisher[1]    # adjusted p value posthoc Fisher's exact test, 3 vs 5 mo
      df_stats[rowindex, 31] <- PT$p.adj.Fisher[2]     # adjusted p value posthoc Fisher's exact test, 3 vs 8 mo
      df_stats[rowindex, 32] <- PT$p.adj.Fisher[3]       # adjusted p value posthoc Fisher's exact test, 3 vs 14 mo
      df_stats[rowindex, 33] <- PT$p.adj.Fisher[4]       # adjusted p value posthoc Fisher's exact test, 3 vs 20 mo
      df_stats[rowindex, 34] <- PT$p.adj.Fisher[5]       # adjusted p value posthoc Fisher's exact test, 3 vs 26 mo
      df_stats[rowindex, 35] <- PT$p.adj.Fisher[6]       # adjusted p value posthoc Fisher's exact test, 5 vs 8 mo
      df_stats[rowindex, 36] <- PT$p.adj.Fisher[7]       # adjusted p value posthoc Fisher's exact test, 5 vs 14 mo
      df_stats[rowindex, 37] <- PT$p.adj.Fisher[8]       # adjusted p value posthoc Fisher's exact test, 5 vs 20 mo
      df_stats[rowindex, 38] <- PT$p.adj.Fisher[9]       # adjusted p value posthoc Fisher's exact test, 5 vs 26 mo
      df_stats[rowindex, 39] <- PT$p.adj.Fisher[10]       # adjusted p value posthoc Fisher's exact test, 8 vs 14 mo
      df_stats[rowindex, 40] <- PT$p.adj.Fisher[11]       # adjusted p value posthoc Fisher's exact test, 8 vs 20 mo
      df_stats[rowindex, 41] <- PT$p.adj.Fisher[12]       # adjusted p value posthoc Fisher's exact test, 8 vs 26 mo
      df_stats[rowindex, 42] <- PT$p.adj.Fisher[13]       # adjusted p value posthoc Fisher's exact test, 14 vs 20 mo
      df_stats[rowindex, 43] <- PT$p.adj.Fisher[14]       # adjusted p value posthoc Fisher's exact test, 14 vs 26 mo
      df_stats[rowindex, 44] <- PT$p.adj.Fisher[15]       # adjusted p value posthoc Fisher's exact test, 20 vs 26 mo
}

colnames(df_stats) <- c('phenotype', 'n_3mo_noPathol', 'n_3mo_pathol', 'n_5mo_noPathol', 'n_5mo_pathol', 'n_8mo_noPathol', 'n_8mo_pathol', 'n_14mo_noPathol', 'n_14mo_pathol', 'n_20mo_noPathol', 'n_20mo_pathol', 'n_26mo_noPathol', 'n_26mo_pathol', 'p_fisher', 'posthoc_3_vs_5mo_p_unadj', 'posthoc_3_vs_8mo_p_unadj', 'posthoc_3_vs_14mo_p_unadj', 'posthoc_3_vs_20mo_p_unadj', 'posthoc_3_vs_26mo_p_unadj', 'posthoc_5_vs_8mo_p_unadj', 'posthoc_5_vs_14mo_p_unadj', 'posthoc_5_vs_20mo_p_unadj', 'posthoc_5_vs_26mo_p_unadj', 'posthoc_8_vs_14mo_p_unadj', 'posthoc_8_vs_20mo_p_unadj', 'posthoc_8_vs_26mo_p_unadj', 'posthoc_14_vs_20mo_p_unadj', 'posthoc_14_vs_26mo_p_unadj', 'posthoc_20_vs_26mo_p_unadj', 'posthoc_3_vs_5mo_p_adj', 'posthoc_3_vs_8mo_p_adj', 'posthoc_3_vs_14mo_p_adj', 'posthoc_3_vs_20mo_p_adj', 'posthoc_3_vs_26mo_p_adj', 'posthoc_5_vs_8mo_p_adj', 'posthoc_5_vs_14mo_p_adj', 'posthoc_5_vs_20mo_p_adj', 'posthoc_5_vs_26mo_p_adj', 'posthoc_8_vs_14mo_p_adj', 'posthoc_8_vs_20mo_p_adj', 'posthoc_8_vs_26mo_p_adj', 'posthoc_14_vs_20mo_p_adj', 'posthoc_14_vs_26mo_p_adj', 'posthoc_20_vs_26mo_p_adj')

write.csv(df_stats, file = 'Statistics_Fisher exact test_ageGroups_histopathology.csv')






________________________________________________________

## PCA of continuous phenotypic variables
# impute missing values using R package 'mice'
# imputation is done group by group


ulimit -s 16384
export R_MAX_VSIZE=100000000000
R --max-ppsize 500000
rm(list=ls())

setwd("/Users/danehninger/Documents/Aging_projects/Altersgruppen_GMC/Results_GMC/DZNE_C57BL_6J_raw_data/AllRawFiles_forMerge/")

library(FactoMineR) # for PCA
library(factoextra) # for PCA
library(mice) # for imputation
library(ggplot2) 

set.seed(12)

df <- read.csv2('MergePhenotypes_v4_forPCA_onlyContinVar.csv')
df$age <- factor(df$age, levels = c('3_mo', '5_mo', '8_mo', '14_mo', '20_mo', '26_mo'))

for(i in 2:ncol(df)) {
      df[, i] <- as.numeric(as.character(df[, i]))
}

groups <- c('3_mo', '5_mo', '8_mo', '14_mo', '20_mo', '26_mo')
c <- c(1,2,3,4,5,6)

for (i in c){
      if (i== 1){
            df_mice <- df[df$age == groups[i],]
            mice_imputes <- mice(df_mice, method='cart', m=1, threshold=1.6)
      } else {
            df_mice_temp <- df[df$age == groups[i],]
            mice_imputes_temp <- mice(df_mice_temp, method='cart', m=1, threshold=1.6)
            mice_imputes <- rbind(mice_imputes, mice_imputes_temp)
      }
}


Imputed_data=complete(mice_imputes)
write.csv(Imputed_data, file = 'MergePhenotypes_v4_forPCA_onlyContinVar_imputedWithMice_groupWise.csv')

#manually reorder groups in 'MergePhenotypes_v4_forPCA_onlyContinVar_imputedWithMice_groupWise.csv' to bring them in the same order as in
#the df$age column

df <- read.csv2('MergePhenotypes_v4_forPCA_onlyContinVar_imputedWithMice_groupWise_meanPHA_ordered.csv')
df$age <- factor(df$age, levels = c('3_mo', '5_mo', '8_mo', '14_mo', '20_mo', '26_mo'))

for(i in 2:ncol(df)) {
      df[, i] <- as.numeric(as.character(df[, i]))
}

pca_obj <- PCA(df[,2:ncol(df)], scale.unit=TRUE)

#visualize individual animals on PCA plane with group assignments
f <- fviz_pca_ind(pca_obj, geom = 'point', pointsize = 3, pointshape = 16, alpha = 0.6, axes = c(1,2), habillage = df$age, addEllipses = TRUE) +
        #scale_color_manual(values = my_colors) +
        #scale_fill_manual(values = my_colors) +
        theme_classic()

ggsave(filename = 'PCA_phenotypes_AgeGroups_ImputedWithMice_GroupWise_meanPHA_ordered.svg', device = 'svg')
